[{"C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\index.js":"1","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\App.js":"2","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\Login.js":"3","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\Header.js":"4","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\TrainList.js":"5","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\Showcase.js":"6","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\Footer.js":"7","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\Destinations.js":"8","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\Error.js":"9","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\Booking.js":"10","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\AddTrain.js":"11","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\Search.js":"12","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\BookingList.js":"13","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\UserRegister.js":"14","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\PaymentForm.js":"15","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\UserLogin.js":"16","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\Services\\SearchService.js":"17","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\Services\\PaymentService.js":"18","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\Services\\BookService.js":"19"},{"size":263,"mtime":1641135840000,"results":"20","hashOfConfig":"21"},{"size":1972,"mtime":1641144358000,"results":"22","hashOfConfig":"21"},{"size":3755,"mtime":1641222772093,"results":"23","hashOfConfig":"21"},{"size":871,"mtime":1641196839384,"results":"24","hashOfConfig":"21"},{"size":5737,"mtime":1641123824000,"results":"25","hashOfConfig":"21"},{"size":447,"mtime":1641182625090,"results":"26","hashOfConfig":"21"},{"size":527,"mtime":1640600256000,"results":"27","hashOfConfig":"21"},{"size":1889,"mtime":1640812506000,"results":"28","hashOfConfig":"21"},{"size":340,"mtime":1640759528000,"results":"29","hashOfConfig":"21"},{"size":6990,"mtime":1641053554000,"results":"30","hashOfConfig":"21"},{"size":9909,"mtime":1641147074000,"results":"31","hashOfConfig":"21"},{"size":5575,"mtime":1641123964000,"results":"32","hashOfConfig":"21"},{"size":4805,"mtime":1641073628000,"results":"33","hashOfConfig":"21"},{"size":6640,"mtime":1641044230000,"results":"34","hashOfConfig":"21"},{"size":3538,"mtime":1641043786000,"results":"35","hashOfConfig":"21"},{"size":3153,"mtime":1641077108000,"results":"36","hashOfConfig":"21"},{"size":1131,"mtime":1641147076000,"results":"37","hashOfConfig":"21"},{"size":256,"mtime":1640893664000,"results":"38","hashOfConfig":"21"},{"size":242,"mtime":1640894984000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"guep52",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\index.js",[],["90","91"],"C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\App.js",["92"],"import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Showcase from \"./components/Showcase\";\nimport Footer from \"./components/Footer\";\nimport Login from \"./components/Login.js\";\nimport Destinations from \"./components/Destinations\";\nimport Error from \"./components/Error\";\nimport Search from \"./components/Search\";\nimport AddTrain from \"./components/AddTrain\";\nimport TrainList from \"./TrainList\";\nimport Booking from \"./components/Booking\";\nimport UserRegister from \"./components/UserRegister\";\nimport BookingList from \"./components/BookingList\";\nimport PaymentForm from \"./components/PaymentForm\";\nimport UserLogin from \"./components/UserLogin\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Showcase />\n          <Destinations />\n        </Route>\n\n        <Route exact path=\"/login\">\n          <Login />\n        </Route>\n\n        <Route path=\"/userregistration\">\n          <UserRegister />\n        </Route>\n\n        <Route path=\"/userlogin\">\n          <UserLogin />\n        </Route>\n\n        <Route exact path=\"/adminTrainList\">\n           <TrainList/>\n        </Route>\n\n        <Route exact path=\"/trainList\">\n          <BookingList></BookingList>\n        </Route>\n\n        <Route exact path=\"/booking\">\n          <Booking></Booking>\n        </Route>\n\n       <Route exact path=\"/edit-train/:id\">\n          <AddTrain/>\n        </Route>\n\n        <Route exact path=\"/addTrain\">\n        <AddTrain/>\n        </Route> \n\n        <Route exact path=\"/search\">\n          <Search />\n        </Route>\n\n        <Route path=\"/checkin\">\n          <Booking />\n        </Route>\n\n        <Route exact path=\"/payment\">\n          <PaymentForm></PaymentForm>\n        </Route>\n\n        <Route path=\"*\">\n          <Error />\n        </Route>\n      </Switch>\n      {/* <Footer /> */}\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\Login.js",["93","94","95","96","97","98"],"import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, { Component, useContext, useState, Fragment } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport _get from \"lodash.get\";\r\nimport \"./Login.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure()\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  password: Yup.string().required(\"Password is required!\"),\r\n  username: Yup.string().required(\"username is required!\"),\r\n});\r\n\r\nconst Login = () => {\r\n   \r\n   /**To Show Add Toastify Text */\r\n   const notify = () => {\r\n    toast.success(\"Admin LoggedIn Successfully!!!\", {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n    });\r\n  };\r\n  \r\n  /**To Show Error Toastify Text */\r\n  const error = () =>\r\n  {\r\n    toast.error(\"Invalid Credentials!!!\", {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n    });\r\n  };\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const fromUrl = _get(location, \"state.from.pathname\");\r\n  const signInSuccess = (userData) => {\r\n    if (fromUrl) {\r\n      history.push(fromUrl);\r\n    } else {\r\n      history.push(\"/adminTrainList\");\r\n    }\r\n  };\r\n\r\n  const signInFailure = (userData) => {\r\n    if (fromUrl) {\r\n      history.push(fromUrl);\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  const login = (userData) => {\r\n    fetch(\"http://localhost:8682/auth\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        accept: \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: userData.username,\r\n        password: userData.password,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response.error) {\r\n          alert(\"your userId and password is not correct\");\r\n        } else {\r\n          const userData = {\r\n            token: response,\r\n            name: username,\r\n          };\r\n          if(response.response === ' Invalid Credentials..!')\r\n          {\r\n            signInFailure(userData);\r\n            error();\r\n          }\r\n        else{\r\n           signInSuccess(userData);\r\n           notify();\r\n        }\r\n          console.log(response);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        username: \"\",\r\n        password: \"\",\r\n      }}\r\n      validationSchema={LoginSchema}\r\n      onSubmit={async (values, { resetForm }) => {\r\n        try {\r\n          const userData = { ...values };\r\n          resetForm();\r\n          // notify();\r\n          login(userData);\r\n        } catch (err) {\r\n          // error();\r\n          console.error(err);\r\n        }\r\n      }}\r\n    >\r\n      {() => (\r\n        <Form>\r\n           <div className=\"booking-container\">\r\n           <h1 className=\"booking\">ADMIN LOGIN</h1>\r\n           <hr></hr>\r\n            <div className=\"inner\">\r\n              <label><b>User Name</b></label>\r\n              <Field name=\"username\" type=\"text\" placeholder=\"Enter username\" />\r\n              <label><b>Password</b></label>\r\n              <Field name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n              <button\r\n                className=\"btn btn-success\"\r\n                type=\"submit\"\r\n                onClick={() => {}}\r\n              >\r\n                Sign In\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\nexport default Login;","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\Header.js",[],"C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\TrainList.js",["99"],"import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport AddTrain from \"./components/AddTrain\";\r\nimport SearchService from \"./Services/SearchService\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\ntoast.configure();\r\n\r\nconst TrainList = () => {\r\n  /**To Show Add Toastify Text */\r\n  const notify = () => {\r\n    toast.success(\"Train Updated Successfully\", {\r\n      position: \"top-center\",\r\n      autoClose: 3000,\r\n    });\r\n  };\r\n  /**To Show Delete Toastify Text */\r\n  const showdelete = () => {\r\n    toast.error(\"Train Deleted\", {\r\n      position: \"top-center\",\r\n      autoClose: 3000,\r\n    });\r\n  };\r\n  const [Trains, setTrains] = useState([]);\r\n  useEffect(() => {\r\n    getAllTrains();\r\n  }, []);\r\n\r\n  const getAllTrains = () => {\r\n    SearchService.getAllTrains()\r\n      .then((response) => {\r\n        setTrains(response.data);\r\n        console.log(response.date);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const deleteTrain = (trainNo) => {\r\n    SearchService.deleteTrain(trainNo)\r\n      .then((response) => {\r\n        getAllTrains();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  return (\r\n    <div class=\"container \">\r\n      <div className=\"crud shadow-lg p-3 mb-5 mt-5 bg-body rounded\">\r\n        <div class=\"row \">\r\n          <div class=\"col-sm-3 mt-5 mb-4 text-gred\">\r\n            <div className=\"search\">\r\n              <form class=\"form-inline\">\r\n                <input\r\n                  class=\"form-control mr-sm-2\"\r\n                  type=\"search\"\r\n                  placeholder=\"Search Train\"\r\n                  aria-label=\"Search\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div\r\n            class=\"col-sm-3 offset-sm-2 mt-5 mb-4 text-gred\"\r\n            style={{ color: \"#D2691E\" }}\r\n          >\r\n            <h2>\r\n              <b>TRAIN DETAILS</b>\r\n            </h2>\r\n          </div>\r\n          <div class=\"col-sm-3 offset-sm-1  mt-5 mb-4 text-gred\">\r\n            <Link to=\"/addTrain\">\r\n              <Button variant=\"primary\" onClick={handleShow}>\r\n                Add Train\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"table-responsive \">\r\n            <table class=\"table table-striped table-hover table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th>TrainNo </th>\r\n                  <th>TrainName </th>\r\n                  <th>SourceStation </th>\r\n                  <th>DestinationStation </th>\r\n                  <th>ArrivalTime </th>\r\n                  <th>DepartureTime </th>\r\n                  <th>Duration </th>\r\n                  <th>NoOfSeats </th>\r\n                  <th>FirstClass </th>\r\n                  <th>SecondClass </th>\r\n                  <th>ThirdClass </th>\r\n                  <th>Sleeper </th>\r\n                  <th>Actions </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {Trains.map((TrainDetails) => (\r\n                  <tr key={TrainDetails.trainNo}>\r\n                    <td> {TrainDetails.trainNo} </td>\r\n                    <td> {TrainDetails.trainName} </td>\r\n                    <td> {TrainDetails.sourceStation} </td>\r\n                    <td>{TrainDetails.destinationStation}</td>\r\n                    <td>{TrainDetails.arrivalTime}</td>\r\n                    <td>{TrainDetails.deptTime}</td>\r\n                    <td>{TrainDetails.duration}</td>\r\n                    <td>{TrainDetails.noOfSeats}</td>\r\n                    <td> {TrainDetails.firstClassACFare} </td>\r\n                    <td> {TrainDetails.twoTierAcFare} </td>\r\n                    <td> {TrainDetails.threeTierAcFare} </td>\r\n                    <td> {TrainDetails.sleeperFare} </td>\r\n                    <td>\r\n                      <Link\r\n                        className=\"btn btn-info\"\r\n                        to={`/edit-train/${TrainDetails.trainNo}`}\r\n                      >\r\n                        {\" \"}\r\n                        Update{\" \"}\r\n                      </Link>\r\n                      <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={() => {\r\n                          deleteTrain(TrainDetails.trainNo);\r\n                          showdelete();\r\n                        }}\r\n                        style={{ marginLeft: \"2px\", marginTop: \"5px\" }}\r\n                      >\r\n                        Delete{\" \"}\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <!--- Model Box ---> */}\r\n        <div className=\"model_box\">\r\n          <Modal\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Add Train</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <AddTrain />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          {/* Model Box Finish*/}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrainList;\r\n","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\Showcase.js",[],"C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\Footer.js",[],"C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\Destinations.js",[],"C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\Error.js",[],"C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\Booking.js",["100","101","102","103","104","105","106"],"import React, { useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport BookService from \"../Services/BookService\";\r\nimport { Button, Modal, Input } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Booking.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\ntoast.configure();\r\n\r\nconst Booking = () => {\r\n  /**To Show Add Toastify Text */\r\n  const notify = () => {\r\n    toast.success({\r\n      position: \"top-center\",\r\n      autoClose: false,\r\n    });\r\n  };\r\n  const [id, setid] = useState(\"\");\r\n  const [name, setname] = useState(\"\");\r\n  const [age, setage] = useState(\"\");\r\n  const [sex, setsex] = useState(\"\");\r\n  const [address, setaddress] = useState(\"\");\r\n  const [trainNo, settrainNo] = useState(\"\");\r\n  const [trainName, settrainName] = useState(\"\");\r\n  const [sourceStation, setsourceStation] = useState(\"\");\r\n  const [destinationStation, setdestinationStation] = useState(\"\");\r\n  const [classType, setclassType] = useState(\"\");\r\n  const [adults, setadults] = useState(\"\");\r\n  const [children, setchildren] = useState(\"\");\r\n  const [payment, setpayment] = useState(\"\");\r\n  const [pnrNo, setpnrNo] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const bookTrain = (e) => {\r\n    e.preventDefault();\r\n    const UserDetails = {\r\n      id,\r\n      name,\r\n      age,\r\n      sex,\r\n      address,\r\n      trainNo,\r\n      trainName,\r\n      sourceStation,\r\n      destinationStation,\r\n      classType,\r\n      adults,\r\n      children,\r\n      pnrNo,\r\n      payment,\r\n    };\r\n\r\n    BookService.bookTrain(UserDetails)\r\n      .then((response) => {\r\n        var e = JSON.stringify(response.data);\r\n        alert(e);\r\n        console.log(response);\r\n        history.push(\"/booking\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  return (\r\n    <form>\r\n      <div className=\"booking-container\">\r\n        <h1 className=\"booking\">BOOKING FORM</h1>\r\n        <hr></hr>\r\n        <p className=\"instruction\">\r\n          Please fill in this form to book a train ticket.\r\n        </p>\r\n        <div className=\"form-booking\">\r\n          <label>\r\n            <b>Name</b>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            placeholder=\"Enter Your Name\"\r\n            required\r\n            value={name}\r\n            onChange={(e) => setname(e.target.value)}\r\n          ></input>\r\n\r\n          <label>\r\n            <b>Age</b>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"Age\"\r\n            id=\"age\"\r\n            placeholder=\"Enter Your Age\"\r\n            required\r\n            value={age}\r\n            onChange={(e) => setage(e.target.value)}\r\n          ></input>\r\n\r\n          <label>\r\n            <b>Gender</b>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"sex\"\r\n            id=\"sex\"\r\n            placeholder=\"Enter Your Gender\"\r\n            required\r\n            value={sex}\r\n            onChange={(e) => setsex(e.target.value)}\r\n          ></input>\r\n\r\n          <label>\r\n            <b>Address</b>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"address\"\r\n            id=\"address\"\r\n            placeholder=\"Enter Your Address\"\r\n            required\r\n            value={address}\r\n            onChange={(e) => setaddress(e.target.value)}\r\n          ></input>\r\n\r\n          <label>\r\n            <b>Train No</b>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"trainNo\"\r\n            id=\"trainNo\"\r\n            placeholder=\"Enter Your TrainNo\"\r\n            required\r\n            value={trainNo}\r\n            onChange={(e) => settrainNo(e.target.value)}\r\n          ></input>\r\n\r\n          <label>\r\n            <b>Train Name</b>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"trainName\"\r\n            id=\"trainName\"\r\n            placeholder=\"Enter Your TrainName\"\r\n            required\r\n            value={trainName}\r\n            onChange={(e) => settrainName(e.target.value)}\r\n          ></input>\r\n\r\n          <label for=\"sourceStation\">\r\n            <b>Source Station</b>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"sourceStation\"\r\n            id=\"sourceStation\"\r\n            placeholder=\"Enter Your SourceStation\"\r\n            required\r\n            value={sourceStation}\r\n            onChange={(e) => setsourceStation(e.target.value)}\r\n          ></input>\r\n\r\n          <label for=\"destinationStation\">\r\n            <b>Destination Station</b>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"destinationStation\"\r\n            id=\"destinationStation\"\r\n            placeholder=\"Enter Your DestinationStation\"\r\n            required\r\n            value={destinationStation}\r\n            onChange={(e) => setdestinationStation(e.target.value)}\r\n          ></input>\r\n\r\n          <label for=\"classType\">\r\n            <b>ClassType</b>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"classType\"\r\n            id=\"classType\"\r\n            placeholder=\"Enter Your ClassType\"\r\n            required\r\n            value={classType}\r\n            onChange={(e) => setclassType(e.target.value)}\r\n          ></input>\r\n\r\n          <label for=\"adults\">\r\n            <b>Adults</b>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"adults\"\r\n            id=\"adults\"\r\n            placeholder=\"Enter Your Adults\"\r\n            required\r\n            value={adults}\r\n            onChange={(e) => setadults(e.target.value)}\r\n          ></input>\r\n\r\n          <label for=\"children\">\r\n            <b>Children</b>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"children\"\r\n            id=\"children\"\r\n            placeholder=\"Enter Your Children\"\r\n            required\r\n            value={children}\r\n            onChange={(e) => setchildren(e.target.value)}\r\n          ></input>\r\n\r\n          <label for=\"payment\">\r\n            <b>Payment</b>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"payment\"\r\n            id=\"payment\"\r\n            placeholder=\"Enter Your Payment\"\r\n            required\r\n            value={payment}\r\n            onChange={(e) => setpayment(e.target.value)}\r\n          ></input>\r\n\r\n          <hr></hr>\r\n          <Link\r\n            className=\"btn btn-success\"\r\n            onClick={(e) => {\r\n              bookTrain(e);\r\n            }}\r\n          >\r\n            BOOK{\" \"}\r\n          </Link>\r\n          <button type=\"submit\" className=\"btn btn-danger\">{\" \"}Cancel{\" \"}</button>\r\n          <Link className=\"btn btn-info\" to=\"/payment\">\r\n            {\" \"}\r\n            Proceed To Payment{\" \"}\r\n          </Link>\r\n          <ToastContainer />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Booking;\r\n","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\AddTrain.js",["107","108"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport SearchService from \"../Services/SearchService.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure();\r\n\r\nconst AddTrain = () => {\r\n  /**To Show Add Train Toastify Text */\r\n  const notify = () => {\r\n    toast(\"Train Added Successfully\", {\r\n      position: \"top-center\",\r\n      autoClose: 3000,\r\n    });\r\n  };\r\n  const [trainNo, settrainNo] = useState(\"\");\r\n  const [trainName, settrainName] = useState(\"\");\r\n  const [sourceStation, setsourceStation] = useState(\"\");\r\n  const [destinationStation, setdestinationStation] = useState(\"\");\r\n  const [arrivalTime, setarrivalTime] = useState(\"\");\r\n  const [deptTime, setdeptTime] = useState(\"\");\r\n  const [duration, setduration] = useState(\"\");\r\n  const [noOfSeats, setnoOfSeats] = useState(\"\");\r\n  const [firstClassACFare, setfirstClassACFare] = useState(\"\");\r\n  const [twoTierAcFare, settwoTierAcFare] = useState(\"\");\r\n  const [threeTierAcFare, setthreeTierAcFare] = useState(\"\");\r\n  const [sleeperFare, setsleeperFare] = useState(\"\");\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const saveOrUpdateTrains = (e) => {\r\n    e.preventDefault();\r\n    const TrainDetails = {\r\n      trainNo,\r\n      trainName,\r\n      sourceStation,\r\n      destinationStation,\r\n      arrivalTime,\r\n      deptTime,\r\n      duration,\r\n      noOfSeats,\r\n      firstClassACFare,\r\n      twoTierAcFare,\r\n      threeTierAcFare,\r\n      sleeperFare,\r\n    };\r\n    if (id) {\r\n      SearchService.updateTrain(id, TrainDetails)\r\n        .then((response) => {\r\n          alert(\"Your Train has been updated\");\r\n          history.push(\"/adminTrainList\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      SearchService.addTrain(TrainDetails)\r\n        .then((response) => {\r\n          alert(\"Your Train has been Added\");\r\n          history.push(\"/adminTrainList\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    SearchService.getTrainById(trainNo)\r\n      .then((response) => {\r\n        settrainNo(response.data.trainNo);\r\n        settrainName(response.data.trainName);\r\n        setsourceStation(response.data.sourceStation);\r\n        setdestinationStation(response.data.destinationStation);\r\n        setarrivalTime(response.data.arrivalTime);\r\n        setdeptTime(response.data.deptTime);\r\n        setduration(response.data.duration);\r\n        setnoOfSeats(response.data.noOfSeats);\r\n        setfirstClassACFare(response.data.firstClassACFare);\r\n        settwoTierAcFare(response.data.twoTierAcFare);\r\n        setthreeTierAcFare(response.data.threeTierAcFare);\r\n        setsleeperFare(response.data.sleeperFare);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const title = () => {\r\n    if (id) {\r\n      return <h2 className=\"text-center\">Update Train</h2>;\r\n    } else {\r\n      return <h2 className=\"text-center\">Add Train</h2>;\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <br></br>\r\n      <br></br>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n            {title()}\r\n            <div className=\"card-body\">\r\n              <form>\r\n                <div className=\"form-group mb-2\">\r\n                  <label className=\"form-label\">TrainNo</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Train Number\"\r\n                    name=\"trainNo\"\r\n                    className=\"form-control\"\r\n                    value={trainNo}\r\n                    onChange={(e) => settrainNo(e.target.value)}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"form-group mb-2\">\r\n                  <label className=\"form-label\">Train Name</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Train Name\"\r\n                    name=\"trainName\"\r\n                    className=\"form-control\"\r\n                    value={trainName}\r\n                    onChange={(e) => settrainName(e.target.value)}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"form-group mb-2\">\r\n                  <label className=\"form-label\">Source Station</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter start point\"\r\n                    name=\"sourceStation\"\r\n                    className=\"form-control\"\r\n                    value={sourceStation}\r\n                    onChange={(e) => setsourceStation(e.target.value)}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"form-group mb-2\">\r\n                  <label className=\"form-label\">Destination Station</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter end point\"\r\n                    name=\"destinationStation\"\r\n                    className=\"form-control\"\r\n                    value={destinationStation}\r\n                    onChange={(e) => setdestinationStation(e.target.value)}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"form-group mb-2\">\r\n                  <label className=\"form-label\">ArrivalTime</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Arrival Time\"\r\n                    name=\"arrivalTime\"\r\n                    className=\"form-control\"\r\n                    value={arrivalTime}\r\n                    onChange={(e) => setarrivalTime(e.target.value)}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"form-group mb-2\">\r\n                  <label className=\"form-label\">DeptTime</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Departure Time\"\r\n                    name=\"deptTime\"\r\n                    className=\"form-control\"\r\n                    value={deptTime}\r\n                    onChange={(e) => setdeptTime(e.target.value)}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"form-group mb-2\">\r\n                  <label className=\"form-label\">Duration</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Duration\"\r\n                    name=\"duration\"\r\n                    className=\"form-control\"\r\n                    value={duration}\r\n                    onChange={(e) => setduration(e.target.value)}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"form-group mb-2\">\r\n                  <label className=\"form-label\">NoOfSeats</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Number of seats\"\r\n                    name=\"noOfSeats\"\r\n                    className=\"form-control\"\r\n                    value={noOfSeats}\r\n                    onChange={(e) => setnoOfSeats(e.target.value)}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"form-group mb-2\">\r\n                  <label className=\"form-label\">firstClassACFare</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter FirstClass AC Fare\"\r\n                    name=\"firstClassACFare\"\r\n                    className=\"form-control\"\r\n                    value={firstClassACFare}\r\n                    onChange={(e) => setfirstClassACFare(e.target.value)}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"form-group mb-2\">\r\n                  <label className=\"form-label\">TwoTierAcFare</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter TwoTier AC Fare\"\r\n                    name=\"twoTierAcFare\"\r\n                    className=\"form-control\"\r\n                    value={twoTierAcFare}\r\n                    onChange={(e) => settwoTierAcFare(e.target.value)}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"form-group mb-2\">\r\n                  <label className=\"form-label\">ThreeTierAcFare</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter ThreeTier AC Fare\"\r\n                    name=\"threeTierAcFare\"\r\n                    className=\"form-control\"\r\n                    value={threeTierAcFare}\r\n                    onChange={(e) => setthreeTierAcFare(e.target.value)}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"form-group mb-2\">\r\n                  <label className=\"form-label\">sleeperFare</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter SleeperFare\"\r\n                    name=\"sleeperFare\"\r\n                    className=\"form-control\"\r\n                    value={sleeperFare}\r\n                    onChange={(e) => setsleeperFare(e.target.value)}\r\n                  ></input>\r\n                </div>\r\n                <Link\r\n                  onClick={(e) => {\r\n                    saveOrUpdateTrains(e);\r\n                  }}\r\n                  to=\"/adminTrainList\"\r\n                  className=\"btn btn-success\"\r\n                >\r\n                  {\" \"}\r\n                  Submit{\" \"}\r\n                </Link>\r\n                <Link to=\"/adminTrainList\" className=\"btn btn-danger\">\r\n                  {\" \"}\r\n                  Cancel{\" \"}\r\n                </Link>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTrain;\r\n","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\Search.js",["109","110","111"],"import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchService from \"../Services/SearchService\";\r\nimport \"./Search.css\";\r\n\r\nconst Search = () => {\r\n  const [Trains, setTrains] = useState([]);\r\n  const [sourceStation, setsourceStation] = useState(\"\");\r\n  const [destinationStation, setdestinationStation] = useState(\"\");\r\n\r\n  const searchTrain = (e) => {\r\n    e.preventDefault();\r\n\r\n    SearchService.getTrainsByRoute(sourceStation, destinationStation)\r\n      .then((response) => {\r\n        var e = JSON.stringify(response.data);\r\n        console.log(response);\r\n        setTrains(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  return (\r\n    <form>\r\n      <div className=\"search-container\">\r\n        <h1 className=\"searching\">SEARCH TRAINS</h1>\r\n        <hr></hr>\r\n        <div className=\"form-searching\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"sourceStation\"\r\n            id=\"sourceStation\"\r\n            placeholder=\"Enter Start Station\"\r\n            value={sourceStation}\r\n            onChange={(e) => setsourceStation(e.target.value)}\r\n            required\r\n          ></input>\r\n\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter End Station\"\r\n            name=\"destinationStation\"\r\n            id=\"destinationStation\"\r\n            value={destinationStation}\r\n            onChange={(e) => setdestinationStation(e.target.value)}\r\n            required\r\n          ></input>\r\n          <hr></hr>\r\n          <button className=\"btn btn-success\" onClick={(e) => searchTrain(e)}>\r\n            Search Trains\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"container \">\r\n        <div className=\"crud shadow-lg p-3 mb-5 mt-5 bg-body rounded\">\r\n          <div class=\"row \">\r\n            <div class=\"col-sm-3 mt-5 mb-4 text-gred\">\r\n              <div className=\"search\">\r\n                <form class=\"form-inline\">\r\n                  <input\r\n                    class=\"form-control mr-sm-2\"\r\n                    type=\"search\"\r\n                    placeholder=\"Search Train\"\r\n                    aria-label=\"Search\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <div\r\n              class=\"col-sm-3 offset-sm-2 mt-5 mb-4 text-gred\"\r\n              style={{ color: \"#D2691E\" }}\r\n            >\r\n              <h3>\r\n                <b>LIST OF TRAINS AVAILABLE</b>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"table-responsive \">\r\n              <table class=\"table table-striped table-hover table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>TrainNo </th>\r\n                    <th>TrainName </th>\r\n                    <th>SourceStation </th>\r\n                    <th>DestinationStation </th>\r\n                    <th>ArrivalTime </th>\r\n                    <th>DepartureTime </th>\r\n                    <th>Duration </th>\r\n                    <th>NoOfSeats </th>\r\n                    <th>FirstClass </th>\r\n                    <th>SecondClass </th>\r\n                    <th>ThirdClass </th>\r\n                    <th>Sleeper </th>\r\n                    <th>Actions </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {Trains.map((TrainDetails) => (\r\n                    <tr key={TrainDetails.trainNo}>\r\n                      <td> {TrainDetails.trainNo} </td>\r\n                      <td> {TrainDetails.trainName} </td>\r\n                      <td> {TrainDetails.sourceStation} </td>\r\n                      <td>{TrainDetails.destinationStation}</td>\r\n                      <td>{TrainDetails.arrivalTime}</td>\r\n                      <td>{TrainDetails.deptTime}</td>\r\n                      <td>{TrainDetails.duration}</td>\r\n                      <td>{TrainDetails.noOfSeats}</td>\r\n                      <td> {TrainDetails.firstClassACFare} </td>\r\n                      <td> {TrainDetails.twoTierAcFare} </td>\r\n                      <td> {TrainDetails.threeTierAcFare} </td>\r\n                      <td> {TrainDetails.sleeperFare} </td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <Link className=\"btn btn-info\" to=\"/booking\">\r\n                          {\" \"}\r\n                          Book{\" \"}\r\n                        </Link>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <!--- Model Box ---> */}\r\n          <div className=\"model_box\">\r\n            <Modal\r\n              show={show}\r\n              onHide={handleClose}\r\n              backdrop=\"static\"\r\n              keyboard={false}\r\n            >\r\n              <Modal.Header closeButton>\r\n                <Modal.Title></Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body></Modal.Body>\r\n\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                  Close\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Model Box Finish*/}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\BookingList.js",["112","113","114","115"],"import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Modal, Input } from \"react-bootstrap\";\r\nimport SearchService from \"../Services/SearchService\";\r\nimport {ToastContainer,toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\n\r\n  const BookingList = () => {\r\n   \r\n  /**To Show Add Toastify Text */\r\n  const notify = () => {\r\n    toast.success(\"Train Updated Successfully\", {\r\n      position: \"top-center\",\r\n      autoClose: 3000,\r\n    });\r\n  };\r\n\r\n  const [Trains, setTrains] = useState([]);\r\n  useEffect(() => {\r\n    getAllTrains();\r\n  }, []);\r\n\r\n  const getAllTrains = () => {\r\n    SearchService.getAllTrains()\r\n      .then((response) => {\r\n        setTrains(response.data);\r\n        console.log(response.date);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const deleteTrain = (trainNo) => {\r\n    SearchService.deleteTrain(trainNo)\r\n      .then((response) => {\r\n        alert(\"Your Train has been Deleted\");\r\n        getAllTrains();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  return (\r\n    <div class=\"container \">\r\n      <div className=\"crud shadow-lg p-3 mb-5 mt-5 bg-body rounded\">\r\n        <div class=\"row \">\r\n          <div class=\"col-sm-3 mt-5 mb-4 text-gred\">\r\n            <div className=\"search\">\r\n              <form class=\"form-inline\">\r\n                <input\r\n                  class=\"form-control mr-sm-2\"\r\n                  type=\"search\"\r\n                  placeholder=\"Search Train\"\r\n                  aria-label=\"Search\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div\r\n            class=\"col-sm-3 offset-sm-2 mt-5 mb-4 text-gred\"\r\n            style={{ color: \"#D2691E\" }}\r\n          >\r\n            <h2>\r\n              <b>LIST OF TRAINS AVAILABLE</b>\r\n            </h2>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"table-responsive \">\r\n            <table class=\"table table-striped table-hover table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th>TrainNo </th>\r\n                  <th>TrainName </th>\r\n                  <th>SourceStation </th>\r\n                  <th>DestinationStation </th>\r\n                  <th>ArrivalTime </th>\r\n                  <th>DepartureTime </th>\r\n                  <th>Duration </th>\r\n                  <th>NoOfSeats </th>\r\n                  <th>FirstClass </th>\r\n                  <th>SecondClass </th>\r\n                  <th>ThirdClass </th>\r\n                  <th>Sleeper </th>\r\n                  <th>Actions </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {Trains.map((TrainDetails) => (\r\n                  <tr key={TrainDetails.trainNo}>\r\n                    <td> {TrainDetails.trainNo} </td>\r\n                    <td> {TrainDetails.trainName} </td>\r\n                    <td> {TrainDetails.sourceStation} </td>\r\n                    <td>{TrainDetails.destinationStation}</td>\r\n                    <td>{TrainDetails.arrivalTime}</td>\r\n                    <td>{TrainDetails.deptTime}</td>\r\n                    <td>{TrainDetails.duration}</td>\r\n                    <td>{TrainDetails.noOfSeats}</td>\r\n                    <td> {TrainDetails.firstClassACFare} </td>\r\n                    <td> {TrainDetails.twoTierAcFare} </td>\r\n                    <td> {TrainDetails.threeTierAcFare} </td>\r\n                    <td> {TrainDetails.sleeperFare} </td>\r\n                    <td>\r\n                      {\" \"}\r\n                   <Link className=\"btn btn-info\" to=\"/booking\">\r\n                   {\" \"}\r\n                   Book{\" \"}\r\n                   </Link>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n                \r\n              </tbody>\r\n            </table>\r\n            <ToastContainer/>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <!--- Model Box ---> */}\r\n        <div className=\"model_box\">\r\n          <Modal\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n          >\r\n            <Modal.Header closeButton>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          {/* Model Box Finish*/}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingList; ","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\UserRegister.js",["116"],"import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./UserRegister.css\";\r\nimport userregister from '../assets/userregister.png';\r\nimport {ToastContainer,toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\n\r\n  /**To Show Add Toastify Text */\r\n  const notify = ()=>{\r\n    toast.success('User Added Successfully!!',\r\n    {\r\n        position: \"top-center\",\r\n        autoClose:3000\r\n    });\r\n\r\n}\r\n\r\nexport default class UserRegister extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      emailId: \"\",\r\n      contact: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      confirmpassword: \"\",\r\n      nameError: \"\",\r\n      emailIdError: \"\",\r\n      contactError: \"\",\r\n      usernameError: \"\",\r\n      passwordError: \"\",\r\n      confirmpasswordError: \"\",\r\n    };\r\n    this.register = this.register.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  valid() {\r\n    if (\r\n      this.state.name.length < 4 &&\r\n      this.state.emailId.length < 6 &&\r\n      this.state.contact.length <= 10 &&\r\n      this.state.username.length < 6 &&\r\n      this.state.password.length < 6 &&\r\n      this.state.confirmpassword.length < 6\r\n    ) {\r\n      this.setState({\r\n        nameError: \"Invalid Name\",\r\n        emailIdError: \"Please Enter a Valid Email Id\",\r\n        contactError: \"Please Enter 10 Digit Mobile Number\",\r\n        usernameError: \"UserName length shoud be more than 6\",\r\n        passwordError: \"Password length should be more than 6\",\r\n        confirmpasswordError: \"Password length should be more than 6\",\r\n      });\r\n    } else if (this.state.name.length < 1) {\r\n      this.setState({\r\n        nameError: \"Name length should be more than 1\",\r\n      });\r\n    } else if (this.state.emailId.length < 9) {\r\n      this.setState({\r\n        emailIdError: \"Email length should be more than 8\",\r\n      });\r\n    } else if (this.state.contact.length < 9) {\r\n      this.setState({\r\n        contactError: \"Mobile number should be 10 digits\",\r\n      });\r\n    } else if (this.state.username.length < 4) {\r\n      this.setState({\r\n        usernameError: \"Invalid Username\",\r\n      });\r\n    } else if (this.state.password.length < 6) {\r\n      this.setState({\r\n        passwordError: \"Password length should be more than 6\",\r\n      });\r\n    } else if (this.state.confirmpassword.length < 6) {\r\n      this.setState({\r\n        confirmpasswordError: \"Password length should be more than 6\",\r\n      });\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  register(e) {\r\n    this.setState({\r\n      nameError: \"\",\r\n      emailIdError: \"\",\r\n      contactError: \"\",\r\n      usernameError: \"\",\r\n      passwordError: \"\",\r\n      confirmpasswordError: \"\",\r\n    });\r\n    e.preventDefault();\r\n    if (this.valid()) {\r\n      fetch(\"http://localhost:8082/user/signup\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          accept: \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        body: JSON.stringify({\r\n          name: this.state.name,\r\n          emailId: this.state.emailId,\r\n          contact: this.state.contact,\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n          confirmpassword: this.state.confirmpassword,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n          alert(\"Your Registration Is Successfully Added!!\");\r\n        })\r\n        .catch((err) => {\r\n          notify();\r\n        });\r\n    }\r\n  }\r\n\r\n  handleChange(changeObject) {\r\n    this.setState(changeObject);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form>\r\n        <div className=\"userlogin-container\">\r\n          <h2 className=\"user-panel\">USER REGISTRATION</h2>\r\n          <hr></hr>\r\n          <div className=\"userregisterform\">\r\n            <label><b>Name</b></label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              onChange={(e) => this.handleChange({ name: e.target.value })}\r\n            />\r\n            <p style={{ color: \"red\" }}>{this.state.usernameError}</p>\r\n          </div>\r\n\r\n          <div className=\"userregisterform\">\r\n            <label><b>Email</b></label>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              onChange={(e) => this.handleChange({ emailId: e.target.value })}\r\n            />\r\n            <p style={{ color: \"red\" }}>{this.state.emailIdError}</p>\r\n          </div>\r\n\r\n          <div className=\"userregisterform\">\r\n            <label><b>Contact</b></label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter contact\"\r\n              onChange={(e) => this.handleChange({ contact: e.target.value })}\r\n            />\r\n            <p style={{ color: \"red\" }}>{this.state.contactError}</p>\r\n          </div>\r\n\r\n          <div className=\"userregisterform\">\r\n            <label><b>UserName</b></label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter username\"\r\n              onChange={(e) => this.handleChange({ username: e.target.value })}\r\n            />\r\n            <p style={{ color: \"red\" }}>{this.state.usernameError}</p>\r\n          </div>\r\n\r\n          <div className=\"userregisterform\">\r\n            <label><b>Password</b></label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              onChange={(e) => this.handleChange({ password: e.target.value })}\r\n            />\r\n            <p style={{ color: \"red\" }}>{this.state.passwordError}</p>\r\n          </div>\r\n\r\n          <div className=\"userregisterform\">\r\n            <label><b>Confirm Password</b></label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter confirm password\"\r\n              onChange={(e) =>\r\n                this.handleChange({ confirmpassword: e.target.value })\r\n              }\r\n            />\r\n            <p style={{ color: \"red\" }}>{this.state.confirmpasswordError}</p>\r\n          </div>\r\n          <div className=\"userregisterform\">\r\n            <Link\r\n              type=\"submit\"\r\n              className=\"btn btn-success\"\r\n              to=\"/search\"\r\n              onClick={(e) => {this.register(e);}}\r\n            >\r\n              Register\r\n            </Link>\r\n            <ToastContainer/>\r\n          </div>\r\n          {/* <p>\r\n              Have an account? <Link to=\"/login\">Login Here</Link>\r\n            </p> */}\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\PaymentForm.js",["117","118"],"import React, { useState} from 'react'\r\nimport PaymentService from '../Services/PaymentService'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PaymentForm = () => {\r\n\r\n    const [pnrNo, setpnrNo] = useState('')\r\n    const [bankName, setbankName] = useState('')\r\n    const [cardNo, setcardNo] = useState('')\r\n    const [cvv, setcvv] = useState('')\r\n    const [classType, setclassType] = useState('')\r\n    const history = useHistory();\r\n\r\n    const makePayment = (e) => {\r\n        e.preventDefault();\r\n        const PaymentDetails = { pnrNo,bankName,cardNo,cvv,classType}\r\n        \r\n            PaymentService.makePayment(PaymentDetails).then((response) => {\r\n               var e = JSON.stringify(response.data);\r\n                alert(e);\r\n                console.log(response);\r\n                history.push('/paymentSucessful')\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n    \r\n    \r\n    }\r\n        return (\r\n            <div>\r\n      <br></br>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n          <br></br><br></br>\r\n            <h2 className=\"text-center\">Payment</h2>\r\n            <div className=\"card-body\">\r\n              <form>\r\n                <div className=\"form-group mb-2\">\r\n                  <label className=\"form-label\">PNR NO</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter PNR No\"\r\n                    name=\"pnrNo\"\r\n                    className=\"form-control\"\r\n                    value={pnrNo}\r\n                    onChange={(e) => setpnrNo(e.target.value)}>\r\n                  </input>\r\n\r\n                </div>\r\n                <div className=\"form-group mb-2\">\r\n                  <label className=\"form-label\">BankName</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Bank Name\"\r\n                    name=\"bankName\"\r\n                    className=\"form-control\"\r\n                    value={bankName}\r\n                    onChange={(e) => setbankName(e.target.value)}>\r\n                  </input>\r\n\r\n                </div>\r\n                <div className=\"form-group mb-2\">\r\n                  <label className=\"form-label\">Card No</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter card No\"\r\n                    name=\"cardNo\"\r\n                    className=\"form-control\"\r\n                    value={cardNo}\r\n                    onChange={(e) => setcardNo(e.target.value)}>\r\n                  </input>\r\n\r\n                </div>\r\n               \r\n                <div className=\"form-group mb-2\">\r\n                  <label className=\"form-label\">CVV</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter cvv\"\r\n                    name=\"cvv\"\r\n                    className=\"form-control\"\r\n                    value={cvv}\r\n                    onChange={(e) => setcvv(e.target.value)}>\r\n                  </input>\r\n\r\n                </div>\r\n\r\n                <Link className=\"btn btn-success\" onClick={(e) => makePayment(e)} >Pay</Link>\r\n                <button to=\"/login\" className=\"btn btn-danger\"> Cancel </button>\r\n              </form>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <br></br>\r\n    </div>\r\n        )\r\n    \r\n}\r\nexport default PaymentForm\r\n","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\components\\UserLogin.js",["119","120","121","122","123","124","125"],"import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, { Component, useContext, useState, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport _get from \"lodash.get\";\r\nimport \"./UserLogin.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure()\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  password: Yup.string().required(\"Password is required!\"),\r\n  username: Yup.string().required(\"username is required!\"),\r\n});\r\n\r\nconst UserLogin = () => {\r\n\r\n  /**To Show Add Toastify Text */\r\n  const notify = () => {\r\n    toast.success(\"User LoggedIn Successfully!!!\", {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n    });\r\n  };\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const fromUrl = _get(location, \"state.from.pathname\");\r\n  const signInSuccess = (userData) => {\r\n    if (fromUrl) {\r\n      history.push(fromUrl);\r\n    } else {\r\n      history.push(\"/search\");\r\n    }\r\n  };\r\n\r\n  const login = (userData) => {\r\n    fetch(\"http://localhost:8682/auth\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        accept: \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: userData.username,\r\n        password: userData.password,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response.error) {\r\n          alert(\"your userId and password is not correct\");\r\n        } else {\r\n          const userData = {\r\n            token: response,\r\n            name: username,\r\n          };\r\n          signInSuccess(userData);\r\n          console.log(response);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <Formik\r\n    initialValues={{\r\n      username: \"\",\r\n      password: \"\",\r\n    }}\r\n    validationSchema={LoginSchema}\r\n    onSubmit={async (values, { resetForm }) => {\r\n      try {\r\n        const userData = { ...values };\r\n        resetForm();\r\n        notify();\r\n        login(userData);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }}\r\n  >\r\n    {() => (\r\n      <Form>\r\n         <div className=\"user-container\">\r\n         <h1 className=\"user\">USER LOGIN</h1>\r\n         <hr></hr>\r\n          <div className=\"inner\">\r\n            <label><b>User Name</b></label>\r\n            <Field name=\"username\" type=\"text\" placeholder=\"Enter username\" />\r\n            <label><b>Password</b></label>\r\n            <Field name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n            <button\r\n              className=\"btn btn-success\"\r\n              type=\"submit\"\r\n              onClick={() => {}}\r\n            >\r\n              Login\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    )}\r\n  </Formik>\r\n);\r\n};\r\n\r\nexport default UserLogin;\r\n","C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\Services\\SearchService.js",[],"C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\Services\\PaymentService.js",[],["126","127"],"C:\\Users\\SHWETPAW\\Desktop\\FinalFront\\railway-reservation-system\\src\\Services\\BookService.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":5,"column":8,"nodeType":"134","messageId":"135","endLine":5,"endColumn":14},{"ruleId":"132","severity":1,"message":"136","line":2,"column":17,"nodeType":"134","messageId":"135","endLine":2,"endColumn":26},{"ruleId":"132","severity":1,"message":"137","line":2,"column":28,"nodeType":"134","messageId":"135","endLine":2,"endColumn":38},{"ruleId":"132","severity":1,"message":"138","line":2,"column":50,"nodeType":"134","messageId":"135","endLine":2,"endColumn":58},{"ruleId":"132","severity":1,"message":"139","line":37,"column":20,"nodeType":"134","messageId":"135","endLine":37,"endColumn":31},{"ruleId":"132","severity":1,"message":"140","line":38,"column":10,"nodeType":"134","messageId":"135","endLine":38,"endColumn":18},{"ruleId":"132","severity":1,"message":"141","line":38,"column":20,"nodeType":"134","messageId":"135","endLine":38,"endColumn":31},{"ruleId":"132","severity":1,"message":"142","line":13,"column":9,"nodeType":"134","messageId":"135","endLine":13,"endColumn":15},{"ruleId":"132","severity":1,"message":"143","line":2,"column":22,"nodeType":"134","messageId":"135","endLine":2,"endColumn":31},{"ruleId":"132","severity":1,"message":"144","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":16},{"ruleId":"132","severity":1,"message":"145","line":4,"column":18,"nodeType":"134","messageId":"135","endLine":4,"endColumn":23},{"ruleId":"132","severity":1,"message":"146","line":4,"column":25,"nodeType":"134","messageId":"135","endLine":4,"endColumn":30},{"ruleId":"132","severity":1,"message":"142","line":13,"column":9,"nodeType":"134","messageId":"135","endLine":13,"endColumn":15},{"ruleId":"132","severity":1,"message":"147","line":19,"column":14,"nodeType":"134","messageId":"135","endLine":19,"endColumn":19},{"ruleId":"132","severity":1,"message":"148","line":32,"column":17,"nodeType":"134","messageId":"135","endLine":32,"endColumn":25},{"ruleId":"132","severity":1,"message":"142","line":12,"column":9,"nodeType":"134","messageId":"135","endLine":12,"endColumn":15},{"ruleId":"149","severity":1,"message":"150","line":88,"column":6,"nodeType":"151","endLine":88,"endColumn":8,"suggestions":"152"},{"ruleId":"132","severity":1,"message":"153","line":3,"column":27,"nodeType":"134","messageId":"135","endLine":3,"endColumn":36},{"ruleId":"132","severity":1,"message":"154","line":18,"column":13,"nodeType":"134","messageId":"135","endLine":18,"endColumn":14},{"ruleId":"132","severity":1,"message":"155","line":29,"column":9,"nodeType":"134","messageId":"135","endLine":29,"endColumn":19},{"ruleId":"132","severity":1,"message":"146","line":4,"column":25,"nodeType":"134","messageId":"135","endLine":4,"endColumn":30},{"ruleId":"132","severity":1,"message":"142","line":13,"column":9,"nodeType":"134","messageId":"135","endLine":13,"endColumn":15},{"ruleId":"132","severity":1,"message":"156","line":36,"column":9,"nodeType":"134","messageId":"135","endLine":36,"endColumn":20},{"ruleId":"132","severity":1,"message":"155","line":51,"column":9,"nodeType":"134","messageId":"135","endLine":51,"endColumn":19},{"ruleId":"132","severity":1,"message":"157","line":5,"column":8,"nodeType":"134","messageId":"135","endLine":5,"endColumn":20},{"ruleId":"132","severity":1,"message":"143","line":3,"column":22,"nodeType":"134","messageId":"135","endLine":3,"endColumn":31},{"ruleId":"132","severity":1,"message":"158","line":12,"column":23,"nodeType":"134","messageId":"135","endLine":12,"endColumn":35},{"ruleId":"132","severity":1,"message":"136","line":2,"column":17,"nodeType":"134","messageId":"135","endLine":2,"endColumn":26},{"ruleId":"132","severity":1,"message":"137","line":2,"column":28,"nodeType":"134","messageId":"135","endLine":2,"endColumn":38},{"ruleId":"132","severity":1,"message":"138","line":2,"column":50,"nodeType":"134","messageId":"135","endLine":2,"endColumn":58},{"ruleId":"132","severity":1,"message":"159","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":14},{"ruleId":"132","severity":1,"message":"139","line":29,"column":20,"nodeType":"134","messageId":"135","endLine":29,"endColumn":31},{"ruleId":"132","severity":1,"message":"140","line":30,"column":10,"nodeType":"134","messageId":"135","endLine":30,"endColumn":18},{"ruleId":"132","severity":1,"message":"141","line":30,"column":20,"nodeType":"134","messageId":"135","endLine":30,"endColumn":31},{"ruleId":"128","replacedBy":"160"},{"ruleId":"130","replacedBy":"161"},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'useContext' is defined but never used.","'Fragment' is defined but never used.","'setUsername' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'notify' is assigned a value but never used.","'useParams' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'Input' is defined but never used.","'setid' is assigned a value but never used.","'setpnrNo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'trainNo'. Either include it or remove the dependency array.","ArrayExpression",["164"],"'useEffect' is defined but never used.","'e' is assigned a value but never used.","'handleShow' is assigned a value but never used.","'deleteTrain' is assigned a value but never used.","'userregister' is defined but never used.","'setclassType' is assigned a value but never used.","'Link' is defined but never used.",["162"],["163"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},"Update the dependencies array to be: [trainNo]",{"range":"167","text":"168"},[2977,2979],"[trainNo]"]